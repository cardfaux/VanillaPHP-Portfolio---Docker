services:
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx.dockerfile
    container_name: nginx
    depends_on:
      - php
      - mysql
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./web:/var/www/html:delegated
    networks:
      - phpblog

  php:
    build:
      context: .
      dockerfile: ./docker/php.dockerfile
    container_name: php
    volumes:
      - ./web:/var/www/html:delegated
    networks:
      - phpblog

  mysql:
    image: mysql:8.4.2
    container_name: mysql
    ports:
      - 4306:3306
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - phpblog

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./web:/var/www/html
    working_dir: /var/www/html
    networks:
      - phpblog

  npm:
    build:
      context: .
      dockerfile: ./docker/node.dockerfile
    container_name: npm
    volumes:
      - ./web:/var/www/html
    working_dir: /var/www/html/public
    entrypoint: ['npm']
    networks:
      - phpblog

  phpunit:
    build:
      context: .
      dockerfile: ./docker/php.dockerfile
    container_name: phpunit
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['/var/www/html/vendor/bin/phpunit']
    networks:
      - phpblog

networks:
  phpblog:
